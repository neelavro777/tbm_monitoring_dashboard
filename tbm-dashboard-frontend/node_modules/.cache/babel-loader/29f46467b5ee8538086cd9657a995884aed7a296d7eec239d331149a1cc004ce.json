{"ast":null,"code":"var _jsxFileName = \"E:\\\\bored tunnelers project\\\\tbm-dashboard\\\\src\\\\components\\\\MotorControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport { useROS } from '../contexts/ROSContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MotorControl = () => {\n  _s();\n  const {\n    ros,\n    connected\n  } = useROS();\n  const [alertMessage, setAlertMessage] = useState('');\n  const [shutdownReason, setShutdownReason] = useState('');\n  useEffect(() => {\n    if (!ros) return;\n    const reasonTopic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/shutdown_reason',\n      messageType: 'std_msgs/String'\n    });\n    reasonTopic.subscribe(message => {\n      setShutdownReason(message.data);\n    });\n    return () => {\n      reasonTopic.unsubscribe();\n    };\n  }, [ros]);\n  const sendMotorCommand = turnOn => {\n    if (!connected) {\n      setAlertMessage('Cannot send command. Disconnected from ROS.');\n      return;\n    }\n    const topic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/web_motor_control',\n      messageType: 'std_msgs/Bool'\n    });\n    const message = new ROSLIB.Message({\n      data: turnOn\n    });\n    topic.publish(message);\n    setAlertMessage(`Motor command to turn ${turnOn ? 'ON' : 'OFF'} sent.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-6 col-md-3 mt-4 mx-4\",\n    children: [alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), shutdownReason && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: shutdownReason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMotorCommand(true),\n      className: \"btn btn-primary me-2\",\n      children: \"Turn On Motor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMotorCommand(false),\n      className: \"btn btn-secondary\",\n      children: \"Turn Off Motor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MotorControl, \"gnUA0SmefaeQYJsmBu4U2ykeQEw=\", false, function () {\n  return [useROS];\n});\n_c = MotorControl;\nexport default MotorControl;\nvar _c;\n$RefreshReg$(_c, \"MotorControl\");","map":{"version":3,"names":["React","useState","useEffect","ROSLIB","useROS","jsxDEV","_jsxDEV","MotorControl","_s","ros","connected","alertMessage","setAlertMessage","shutdownReason","setShutdownReason","reasonTopic","Topic","name","messageType","subscribe","message","data","unsubscribe","sendMotorCommand","turnOn","topic","Message","publish","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/bored tunnelers project/tbm-dashboard/src/components/MotorControl.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ROSLIB from 'roslib';\r\nimport { useROS } from '../contexts/ROSContext';\r\n\r\nconst MotorControl = () => {\r\n  const { ros, connected } = useROS();\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [shutdownReason, setShutdownReason] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!ros) return;\r\n\r\n    const reasonTopic = new ROSLIB.Topic({\r\n      ros: ros,\r\n      name: '/shutdown_reason',\r\n      messageType: 'std_msgs/String'\r\n    });\r\n\r\n    reasonTopic.subscribe((message) => {\r\n      setShutdownReason(message.data);\r\n    });\r\n\r\n    return () => {\r\n      reasonTopic.unsubscribe();\r\n    };\r\n  }, [ros]);\r\n\r\n  const sendMotorCommand = (turnOn) => {\r\n    if (!connected) {\r\n      setAlertMessage('Cannot send command. Disconnected from ROS.');\r\n      return;\r\n    }\r\n\r\n    const topic = new ROSLIB.Topic({\r\n      ros: ros,\r\n      name: '/web_motor_control',\r\n      messageType: 'std_msgs/Bool'\r\n    });\r\n\r\n    const message = new ROSLIB.Message({\r\n      data: turnOn\r\n    });\r\n\r\n    topic.publish(message);\r\n    setAlertMessage(`Motor command to turn ${turnOn ? 'ON' : 'OFF'} sent.`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-6 col-md-3 mt-4 mx-4\">\r\n      {alertMessage && <div className=\"alert alert-warning\">{alertMessage}</div>}\r\n      {shutdownReason && <div className=\"alert alert-info\">{shutdownReason}</div>}\r\n      <button onClick={() => sendMotorCommand(true)} className=\"btn btn-primary me-2\">Turn On Motor</button>\r\n      <button onClick={() => sendMotorCommand(false)} className=\"btn btn-secondary\">Turn Off Motor</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MotorControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}