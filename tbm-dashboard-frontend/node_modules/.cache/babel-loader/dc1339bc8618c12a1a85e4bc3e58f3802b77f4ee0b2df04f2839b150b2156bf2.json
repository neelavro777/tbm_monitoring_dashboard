{"ast":null,"code":"var _jsxFileName = \"E:\\\\bored tunnelers project\\\\tbm-dashboard\\\\src\\\\contexts\\\\ROSContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/ROSContext.js\nimport React, { createContext, useState, useEffect, useContext, useRef } from 'react';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROSContext = /*#__PURE__*/createContext();\nexport const useROS = () => {\n  _s();\n  return useContext(ROSContext);\n};\n_s(useROS, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ROSProvider = ({\n  children\n}) => {\n  _s2();\n  const [connected, setConnected] = useState(false);\n  const rosRef = useRef(null);\n  useEffect(() => {\n    const connectToROS = () => {\n      const ros = new ROSLIB.Ros({\n        url: 'ws://192.168.0.191:9090'\n      });\n      ros.on('connection', () => {\n        console.log('Connected to websocket server.');\n        setConnected(true);\n        rosRef.current = ros;\n      });\n      ros.on('error', error => {\n        console.log('Error connecting to websocket server: ', error);\n        setConnected(false);\n        setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\n      });\n      ros.on('close', () => {\n        console.log('Connection to websocket server closed.');\n        setConnected(false);\n        setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\n      });\n      return ros;\n    };\n    const ros = connectToROS();\n    return () => {\n      if (ros) {\n        ros.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ROSContext.Provider, {\n    value: {\n      ros: rosRef.current,\n      connected\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(ROSProvider, \"e7A2lt92MPBfpI+JzF3ftisTzIQ=\");\n_c = ROSProvider;\nvar _c;\n$RefreshReg$(_c, \"ROSProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useRef","ROSLIB","jsxDEV","_jsxDEV","ROSContext","useROS","_s","ROSProvider","children","_s2","connected","setConnected","rosRef","connectToROS","ros","Ros","url","on","console","log","current","error","setTimeout","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/bored tunnelers project/tbm-dashboard/src/contexts/ROSContext.jsx"],"sourcesContent":["// src/contexts/ROSContext.js\r\nimport React, { createContext, useState, useEffect, useContext, useRef } from 'react';\r\nimport ROSLIB from 'roslib';\r\n\r\nconst ROSContext = createContext();\r\n\r\nexport const useROS = () => {\r\n  return useContext(ROSContext);\r\n};\r\n\r\nexport const ROSProvider = ({ children }) => {\r\n  const [connected, setConnected] = useState(false);\r\n  const rosRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const connectToROS = () => {\r\n      const ros = new ROSLIB.Ros({\r\n        url: 'ws://192.168.0.191:9090'\r\n      });\r\n\r\n      ros.on('connection', () => {\r\n        console.log('Connected to websocket server.');\r\n        setConnected(true);\r\n        rosRef.current = ros;\r\n      });\r\n\r\n      ros.on('error', (error) => {\r\n        console.log('Error connecting to websocket server: ', error);\r\n        setConnected(false);\r\n        setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\r\n      });\r\n\r\n      ros.on('close', () => {\r\n        console.log('Connection to websocket server closed.');\r\n        setConnected(false);\r\n        setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\r\n      });\r\n\r\n      return ros;\r\n    };\r\n\r\n    const ros = connectToROS();\r\n\r\n    return () => {\r\n      if (ros) {\r\n        ros.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ROSContext.Provider value={{ ros: rosRef.current, connected }}>\r\n      {children}\r\n    </ROSContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACrF,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,UAAU,gBAAGR,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMS,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,OAAOP,UAAU,CAACK,UAAU,CAAC;AAC/B,CAAC;AAACE,EAAA,CAFWD,MAAM;AAInB,OAAO,MAAME,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,MAAM,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE3BF,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,GAAG,GAAG,IAAIb,MAAM,CAACc,GAAG,CAAC;QACzBC,GAAG,EAAE;MACP,CAAC,CAAC;MAEFF,GAAG,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;QACzBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAC7CR,YAAY,CAAC,IAAI,CAAC;QAClBC,MAAM,CAACQ,OAAO,GAAGN,GAAG;MACtB,CAAC,CAAC;MAEFA,GAAG,CAACG,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;QACzBH,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEE,KAAK,CAAC;QAC5DV,YAAY,CAAC,KAAK,CAAC;QACnBW,UAAU,CAACT,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC;MAEFC,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM;QACpBC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrDR,YAAY,CAAC,KAAK,CAAC;QACnBW,UAAU,CAACT,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC;MAEF,OAAOC,GAAG;IACZ,CAAC;IAED,MAAMA,GAAG,GAAGD,YAAY,CAAC,CAAC;IAE1B,OAAO,MAAM;MACX,IAAIC,GAAG,EAAE;QACPA,GAAG,CAACS,KAAK,CAAC,CAAC;MACb;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA,CAACC,UAAU,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEX,GAAG,EAAEF,MAAM,CAACQ,OAAO;MAAEV;IAAU,CAAE;IAAAF,QAAA,EAC5DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACpB,GAAA,CA7CWF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}