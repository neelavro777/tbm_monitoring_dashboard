{"ast":null,"code":"var _jsxFileName = \"E:\\\\bored tunnelers project\\\\tbm-dashboard\\\\src\\\\components\\\\MotorControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MotorControl = () => {\n  _s();\n  const rosRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false); // Track connection state\n  const [alertMessage, setAlertMessage] = useState(''); // Alert message for the user\n  const [shutdownReason, setShutdownReason] = useState(''); // Shutdown reason message\n\n  const connectToROS = () => {\n    if (rosRef.current) {\n      rosRef.current.close();\n    }\n    const ros = new ROSLIB.Ros({\n      url: 'ws://192.168.0.191:9090'\n    });\n    ros.on('connection', () => {\n      console.log('Connected to websocket server.');\n      rosRef.current = ros;\n      setIsConnected(true);\n      setAlertMessage(''); // Clear any existing alert message\n\n      subscribeToShutdownReason(ros); // Subscribe to the shutdown_reason topic\n    });\n    ros.on('error', error => {\n      console.log('Error connecting to websocket server: ', error);\n      setIsConnected(false);\n      setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\n    });\n    ros.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setIsConnected(false);\n      setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\n    });\n  };\n  const subscribeToShutdownReason = ros => {\n    const reasonTopic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/shutdown_reason',\n      messageType: 'std_msgs/String'\n    });\n    reasonTopic.subscribe(message => {\n      setShutdownReason(message.data);\n    });\n  };\n  useEffect(() => {\n    connectToROS();\n    return () => {\n      if (rosRef.current) {\n        rosRef.current.close();\n      }\n    };\n  }, []);\n  const sendMotorCommand = turnOn => {\n    if (!isConnected) {\n      setAlertMessage('Cannot send command. Disconnected from ROS.');\n      return;\n    }\n    const topic = new ROSLIB.Topic({\n      ros: rosRef.current,\n      name: '/web_motor_control',\n      messageType: 'std_msgs/Bool'\n    });\n    const message = new ROSLIB.Message({\n      data: turnOn\n    });\n    topic.publish(message);\n    setAlertMessage(`Motor command to turn ${turnOn ? 'ON' : 'OFF'} sent.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-6 col-md-3 mt-4 mx-4\",\n    children: [alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this), shutdownReason && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: shutdownReason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMotorCommand(true),\n      className: \"btn btn-primary me-2\",\n      children: \"Turn On Motor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMotorCommand(false),\n      className: \"btn btn-secondary\",\n      children: \"Turn Off Motor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(MotorControl, \"5vsX7jG415TSf1V1rwe/v4NxcaU=\");\n_c = MotorControl;\nexport default MotorControl;\nvar _c;\n$RefreshReg$(_c, \"MotorControl\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ROSLIB","jsxDEV","_jsxDEV","MotorControl","_s","rosRef","isConnected","setIsConnected","alertMessage","setAlertMessage","shutdownReason","setShutdownReason","connectToROS","current","close","ros","Ros","url","on","console","log","subscribeToShutdownReason","error","setTimeout","reasonTopic","Topic","name","messageType","subscribe","message","data","sendMotorCommand","turnOn","topic","Message","publish","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/bored tunnelers project/tbm-dashboard/src/components/MotorControl.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport ROSLIB from 'roslib';\r\n\r\nconst MotorControl = () => {\r\n  const rosRef = useRef(null);\r\n  const [isConnected, setIsConnected] = useState(false); // Track connection state\r\n  const [alertMessage, setAlertMessage] = useState(''); // Alert message for the user\r\n  const [shutdownReason, setShutdownReason] = useState(''); // Shutdown reason message\r\n\r\n  const connectToROS = () => {\r\n    if (rosRef.current) {\r\n      rosRef.current.close();\r\n    }\r\n\r\n    const ros = new ROSLIB.Ros({\r\n      url: 'ws://192.168.0.191:9090'\r\n    });\r\n\r\n    ros.on('connection', () => {\r\n      console.log('Connected to websocket server.');\r\n      rosRef.current = ros;\r\n      setIsConnected(true);\r\n      setAlertMessage(''); // Clear any existing alert message\r\n\r\n      subscribeToShutdownReason(ros); // Subscribe to the shutdown_reason topic\r\n    });\r\n\r\n    ros.on('error', (error) => {\r\n      console.log('Error connecting to websocket server: ', error);\r\n      setIsConnected(false);\r\n      setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\r\n    });\r\n\r\n    ros.on('close', () => {\r\n      console.log('Connection to websocket server closed.');\r\n      setIsConnected(false);\r\n      setTimeout(connectToROS, 5000); // Attempt to reconnect every 5 seconds\r\n    });\r\n  };\r\n\r\n  const subscribeToShutdownReason = (ros) => {\r\n    const reasonTopic = new ROSLIB.Topic({\r\n      ros: ros,\r\n      name: '/shutdown_reason',\r\n      messageType: 'std_msgs/String'\r\n    });\r\n\r\n    reasonTopic.subscribe((message) => {\r\n      setShutdownReason(message.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectToROS();\r\n\r\n    return () => {\r\n      if (rosRef.current) {\r\n        rosRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendMotorCommand = (turnOn) => {\r\n    if (!isConnected) {\r\n      setAlertMessage('Cannot send command. Disconnected from ROS.');\r\n      return;\r\n    }\r\n\r\n    const topic = new ROSLIB.Topic({\r\n      ros: rosRef.current,\r\n      name: '/web_motor_control',\r\n      messageType: 'std_msgs/Bool'\r\n    });\r\n\r\n    const message = new ROSLIB.Message({\r\n      data: turnOn\r\n    });\r\n\r\n    topic.publish(message);\r\n    setAlertMessage(`Motor command to turn ${turnOn ? 'ON' : 'OFF'} sent.`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-6 col-md-3 mt-4 mx-4\">\r\n      {alertMessage && <div className=\"alert alert-warning\">{alertMessage}</div>}\r\n      {shutdownReason && <div className=\"alert alert-info\">{shutdownReason}</div>}\r\n      <button onClick={() => sendMotorCommand(true)} className=\"btn btn-primary me-2\">Turn On Motor</button>\r\n      <button onClick={() => sendMotorCommand(false)} className=\"btn btn-secondary\">Turn Off Motor</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MotorControl;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1D,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIP,MAAM,CAACQ,OAAO,EAAE;MAClBR,MAAM,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;IACxB;IAEA,MAAMC,GAAG,GAAG,IAAIf,MAAM,CAACgB,GAAG,CAAC;MACzBC,GAAG,EAAE;IACP,CAAC,CAAC;IAEFF,GAAG,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7Cf,MAAM,CAACQ,OAAO,GAAGE,GAAG;MACpBR,cAAc,CAAC,IAAI,CAAC;MACpBE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;;MAErBY,yBAAyB,CAACN,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;IAEFA,GAAG,CAACG,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;MACzBH,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEE,KAAK,CAAC;MAC5Df,cAAc,CAAC,KAAK,CAAC;MACrBgB,UAAU,CAACX,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;IAEFG,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDb,cAAc,CAAC,KAAK,CAAC;MACrBgB,UAAU,CAACX,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMS,yBAAyB,GAAIN,GAAG,IAAK;IACzC,MAAMS,WAAW,GAAG,IAAIxB,MAAM,CAACyB,KAAK,CAAC;MACnCV,GAAG,EAAEA,GAAG;MACRW,IAAI,EAAE,kBAAkB;MACxBC,WAAW,EAAE;IACf,CAAC,CAAC;IAEFH,WAAW,CAACI,SAAS,CAAEC,OAAO,IAAK;MACjClB,iBAAiB,CAACkB,OAAO,CAACC,IAAI,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACdc,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACX,IAAIP,MAAM,CAACQ,OAAO,EAAE;QAClBR,MAAM,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,gBAAgB,GAAIC,MAAM,IAAK;IACnC,IAAI,CAAC1B,WAAW,EAAE;MAChBG,eAAe,CAAC,6CAA6C,CAAC;MAC9D;IACF;IAEA,MAAMwB,KAAK,GAAG,IAAIjC,MAAM,CAACyB,KAAK,CAAC;MAC7BV,GAAG,EAAEV,MAAM,CAACQ,OAAO;MACnBa,IAAI,EAAE,oBAAoB;MAC1BC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,MAAME,OAAO,GAAG,IAAI7B,MAAM,CAACkC,OAAO,CAAC;MACjCJ,IAAI,EAAEE;IACR,CAAC,CAAC;IAEFC,KAAK,CAACE,OAAO,CAACN,OAAO,CAAC;IACtBpB,eAAe,CAAC,yBAAyBuB,MAAM,GAAG,IAAI,GAAG,KAAK,QAAQ,CAAC;EACzE,CAAC;EAED,oBACE9B,OAAA;IAAKkC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,GACtC7B,YAAY,iBAAIN,OAAA;MAAKkC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAE7B;IAAY;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzE/B,cAAc,iBAAIR,OAAA;MAAKkC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAE3B;IAAc;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3EvC,OAAA;MAAQwC,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,IAAI,CAAE;MAACK,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtGvC,OAAA;MAAQwC,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,KAAK,CAAE;MAACK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClG,CAAC;AAEV,CAAC;AAACrC,EAAA,CAvFID,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAyFlB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}