{"ast":null,"code":"var _jsxFileName = \"E:\\\\bored tunnelers project\\\\tbm-dashboard\\\\src\\\\components\\\\PressureDisplay.jsx\",\n  _s = $RefreshSig$();\n// src/components/PressureDisplay.js\nimport React, { useState, useEffect } from 'react';\nimport { useROS } from '../contexts/ROSContext';\nimport { Alert } from 'react-bootstrap';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PressureDisplay = () => {\n  _s();\n  const [pressures, setPressures] = useState({});\n  const {\n    ros\n  } = useROS();\n  const staleThreshold = 5000; // 5 seconds threshold for considering data as stale\n\n  useEffect(() => {\n    if (!ros) return;\n    const topics = ['/pressure_1', '/pressure_2', '/pressure_3', '/pressure_4', '/pressure_5'];\n    topics.forEach(topic => {\n      const subscriber = new ROSLIB.Topic({\n        ros: ros,\n        name: topic,\n        messageType: 'std_msgs/Float32'\n      });\n      subscriber.subscribe(message => {\n        setPressures(prevPressures => ({\n          ...prevPressures,\n          [topic]: {\n            value: message.data,\n            lastUpdated: Date.now()\n          }\n        }));\n      });\n    });\n    const checkStaleData = setInterval(() => {\n      const currentTime = Date.now();\n      setPressures(prevPressures => {\n        const newPressures = {\n          ...prevPressures\n        };\n        Object.keys(newPressures).forEach(topic => {\n          if (currentTime - newPressures[topic].lastUpdated > staleThreshold) {\n            newPressures[topic] = {\n              ...newPressures[topic],\n              value: 'None'\n            };\n          }\n        });\n        return newPressures;\n      });\n    }, 1000);\n    return () => {\n      clearInterval(checkStaleData);\n      topics.forEach(topic => {\n        const subscriber = new ROSLIB.Topic({\n          ros,\n          name: topic,\n          messageType: 'std_msgs/Float32'\n        });\n        subscriber.unsubscribe();\n      });\n    };\n  }, [ros]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-6 col-md-3 mt-4 mx-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Pressure Sensors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: Object.entries(pressures).map(([topic, {\n        value\n      }]) => {\n        let alertVariant = \"light\";\n        if (value !== 'None') {\n          if (value > 80) {\n            alertVariant = \"danger\";\n          } else if (value < 20) {\n            alertVariant = \"info\";\n          }\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: alertVariant,\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [topic, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), \" \", value === 'None' ? value : `${value.toFixed(2)} PSI`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PressureDisplay, \"FSggXYn8Ol62sxAUSlinemXHUvs=\", false, function () {\n  return [useROS];\n});\n_c = PressureDisplay;\nexport default PressureDisplay;\nvar _c;\n$RefreshReg$(_c, \"PressureDisplay\");","map":{"version":3,"names":["React","useState","useEffect","useROS","Alert","ROSLIB","jsxDEV","_jsxDEV","PressureDisplay","_s","pressures","setPressures","ros","staleThreshold","topics","forEach","topic","subscriber","Topic","name","messageType","subscribe","message","prevPressures","value","data","lastUpdated","Date","now","checkStaleData","setInterval","currentTime","newPressures","Object","keys","clearInterval","unsubscribe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","alertVariant","variant","toFixed","_c","$RefreshReg$"],"sources":["E:/bored tunnelers project/tbm-dashboard/src/components/PressureDisplay.jsx"],"sourcesContent":["// src/components/PressureDisplay.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useROS } from '../contexts/ROSContext';\r\nimport { Alert } from 'react-bootstrap';\r\nimport ROSLIB from 'roslib';\r\n\r\nconst PressureDisplay = () => {\r\n  const [pressures, setPressures] = useState({});\r\n  const { ros } = useROS();\r\n  const staleThreshold = 5000; // 5 seconds threshold for considering data as stale\r\n\r\n  useEffect(() => {\r\n    if (!ros) return;\r\n\r\n    const topics = ['/pressure_1', '/pressure_2', '/pressure_3', '/pressure_4', '/pressure_5'];\r\n    topics.forEach(topic => {\r\n      const subscriber = new ROSLIB.Topic({\r\n        ros: ros,\r\n        name: topic,\r\n        messageType: 'std_msgs/Float32'\r\n      });\r\n\r\n      subscriber.subscribe((message) => {\r\n        setPressures(prevPressures => ({\r\n          ...prevPressures,\r\n          [topic]: {\r\n            value: message.data,\r\n            lastUpdated: Date.now()\r\n          }\r\n        }));\r\n      });\r\n    });\r\n\r\n    const checkStaleData = setInterval(() => {\r\n      const currentTime = Date.now();\r\n      setPressures(prevPressures => {\r\n        const newPressures = { ...prevPressures };\r\n        Object.keys(newPressures).forEach(topic => {\r\n          if (currentTime - newPressures[topic].lastUpdated > staleThreshold) {\r\n            newPressures[topic] = { ...newPressures[topic], value: 'None' };\r\n          }\r\n        });\r\n        return newPressures;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(checkStaleData);\r\n      topics.forEach(topic => {\r\n        const subscriber = new ROSLIB.Topic({ ros, name: topic, messageType: 'std_msgs/Float32' });\r\n        subscriber.unsubscribe();\r\n      });\r\n    };\r\n  }, [ros]);\r\n\r\n  return (\r\n    <div className=\"col-6 col-md-3 mt-4 mx-4\">\r\n      <h2 className=\"text-center mb-4\">Pressure Sensors</h2>\r\n      <ul className=\"list-unstyled\">\r\n        {Object.entries(pressures).map(([topic, { value }]) => {\r\n          let alertVariant = \"light\";\r\n          if (value !== 'None') {\r\n            if (value > 80) {\r\n              alertVariant = \"danger\"; \r\n            } else if (value < 20) {\r\n              alertVariant = \"info\"; \r\n            }\r\n          }\r\n\r\n          return (\r\n            <li key={topic}>\r\n              <Alert variant={alertVariant} className=\"d-flex justify-content-between align-items-center\">\r\n                <strong>{topic}:</strong> {value === 'None' ? value : `${value.toFixed(2)} PSI`}\r\n              </Alert>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PressureDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}