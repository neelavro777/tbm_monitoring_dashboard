{"ast":null,"code":"var _jsxFileName = \"E:\\\\bored tunnelers project\\\\tbm-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const ros = new ROSLIB.Ros({\n      url: 'ws://192.168.0.193:9090' // Replace <YOUR_UBUNTU_IP> with your Ubuntu device's IP address\n    });\n    ros.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setConnected(true);\n    });\n    ros.on('error', error => {\n      console.log('Error connecting to websocket server: ', error);\n      setConnected(false);\n    });\n    ros.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setConnected(false);\n    });\n    return () => {\n      ros.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"TBM Monitoring Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-center ${connected ? 'text-success' : 'text-danger'}`,\n          children: connected ? 'Connected to ROSBridge' : 'Disconnected from ROSBridge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NFlTEg7F86aU6mjdNH+dIO8IVKM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ROSLIB","jsxDEV","_jsxDEV","App","_s","connected","setConnected","ros","Ros","url","on","console","log","error","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/bored tunnelers project/tbm-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ROSLIB from 'roslib';\n\nfunction App() {\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    const ros = new ROSLIB.Ros({\n      url: 'ws://192.168.0.193:9090'  // Replace <YOUR_UBUNTU_IP> with your Ubuntu device's IP address\n    });\n\n    ros.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setConnected(true);\n    });\n\n    ros.on('error', (error) => {\n      console.log('Error connecting to websocket server: ', error);\n      setConnected(false);\n    });\n\n    ros.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setConnected(false);\n    });\n\n    return () => {\n      ros.close();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className='mt-3'>\n        <h1 className='text-center'>TBM Monitoring Dashboard</h1>\n        <div className=\"status-indicator\">\n          <h2 className={`text-center ${connected ? 'text-success' : 'text-danger'}`}>\n            {connected ? 'Connected to ROSBridge' : 'Disconnected from ROSBridge'}\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMQ,GAAG,GAAG,IAAIP,MAAM,CAACQ,GAAG,CAAC;MACzBC,GAAG,EAAE,yBAAyB,CAAE;IAClC,CAAC,CAAC;IAEFF,GAAG,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7CN,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC;IAEFC,GAAG,CAACG,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;MACzBF,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEC,KAAK,CAAC;MAC5DP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEFC,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDN,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAM;MACXC,GAAG,CAACO,KAAK,CAAC,CAAC;IACb,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAKa,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBd,OAAA;QAAIa,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDlB,OAAA;QAAKa,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/Bd,OAAA;UAAIa,SAAS,EAAE,eAAeV,SAAS,GAAG,cAAc,GAAG,aAAa,EAAG;UAAAW,QAAA,EACxEX,SAAS,GAAG,wBAAwB,GAAG;QAA6B;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAxCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}